# CONFIG_SITE

# Make any application-specific changes to the EPICS build
#   configuration variables in this file.
#
# Host/target specific settings can be specified in files named
#   CONFIG_SITE.$(EPICS_HOST_ARCH).Common
#   CONFIG_SITE.Common.$(T_A)
#   CONFIG_SITE.$(EPICS_HOST_ARCH).$(T_A)

# CHECK_RELEASE controls the consistency checking of the support
#   applications pointed to by the RELEASE* files.
# Normally CHECK_RELEASE should be set to YES.
# Set CHECK_RELEASE to NO to disable checking completely.
# Set CHECK_RELEASE to WARN to perform consistency checking but
#   continue building even if conflicts are found.
CHECK_RELEASE = YES

# Set this when you only want to compile this application
#   for a subset of the cross-compiled target architectures
#   that Base is built for.
#CROSS_COMPILER_TARGET_ARCHS = vxWorks-ppc32

# To install files into a location other than $(TOP) define
#   INSTALL_LOCATION here.
#INSTALL_LOCATION=</absolute/path/to/install/top>

# Set this when the IOC and build host use different paths
#   to the install location. This may be needed to boot from
#   a Microsoft FTP server say, or on some NFS configurations.
#IOCS_APPL_TOP = </IOC's/absolute/path/to/install/top>

# Protocol Buffers libraries version 3.6.0 or higher require C++ 11.
# archapplDataSup therefore has to be built with the --std=c++11 
# flag if newer versions of Protocol Buffers are used.
# Use this configuration variable to control if archapplDataSup is
# built with C++ 11 or not. If you don't wish the archapplDataSup 
# to be built with C++ 11 flag, that means you have to use Protocol Buffers
# versions older than 3.6.0.
#
ARCHAPPL_USE_CPP11 = YES

# Define as environment variables or define here if needed.
#
# PROTOBUF_INCLUDE_PATH=...
# PROTOBUF_LIB_DIR=/usr/lib64

-include $(TOP)/configure/CONFIG_SITE.local

# end
